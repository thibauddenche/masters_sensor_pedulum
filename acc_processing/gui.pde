/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void textfield1_change1(GTextField source, GEvent event) { //_CODE_:editTextAngle:312716:
  println("textfield1 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:editTextAngle:312716:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:409269:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());

  angle = Integer.parseInt(editTextAngle.getText());
  if (angle > 30){
    editTextError.setText("INPUT IS\nTOO HIGH");
    angle = 0;
  }
  else if (angle < 0){
    editTextError.setText("INPUT IS\nTOO LOW");
    angle = 0;
  }
  else {
    editTextError.setText("...");
    targetValueX = 0.9 * sin(angle * (PI / 180));
    writeOutputAngle();
    setTextTargetX();
    speed = 0;
  }
} //_CODE_:button1:409269:

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:slider1:602962:
  println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:slider1:602962:

public void textfield1_change2(GTextField source, GEvent event) { //_CODE_:textfield1:747663:
  println("textfield1 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:textfield1:747663:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  editTextAngle = new GTextField(this, 125, 27, 80, 20, G4P.SCROLLBARS_NONE);
  editTextAngle.setText("0");
  editTextAngle.setOpaque(true);
  editTextAngle.addEventHandler(this, "textfield1_change1");
  button1 = new GButton(this, 19, 27, 80, 30);
  button1.setText("OK");
  button1.addEventHandler(this, "button1_click1");
  txt_positionx = new GLabel(this, 19, 93, 80, 20);
  txt_positionx.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  txt_positionx.setText("Position x");
  txt_positionx.setOpaque(false);
  xValue = new GLabel(this, 126, 93, 80, 20);
  xValue.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  xValue.setText("..");
  xValue.setOpaque(false);
  txtFanSpeed = new GLabel(this, 19, 180, 80, 20);
  txtFanSpeed.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  txtFanSpeed.setText("% Duty Cycle");
  txtFanSpeed.setOpaque(false);
  speedValue = new GLabel(this, 121, 180, 80, 26);
  speedValue.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  speedValue.setText("...");
  speedValue.setOpaque(false);
  valueTargetX = new GLabel(this, 234, 93, 80, 20);
  valueTargetX.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  valueTargetX.setText("..");
  valueTargetX.setOpaque(false);
  txtTargetValueX = new GLabel(this, 349, 93, 80, 40);
  txtTargetValueX.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  txtTargetValueX.setText("Target x position");
  txtTargetValueX.setOpaque(false);
  slider1 = new GSlider(this, 19, 236, 400, 40, 10.0);
  slider1.setLimits(0.5, 0.0, 1.0);
  slider1.setNumberFormat(G4P.DECIMAL, 2);
  slider1.setOpaque(true);
  slider1.addEventHandler(this, "slider1_change1");
  textfield1 = new GTextField(this, 200, 27, 50, 20, G4P.SCROLLBARS_NONE);
  textfield1.setText("degree");
  textfield1.setOpaque(true);
  textfield1.addEventHandler(this, "textfield1_change2");
  editTextError = new GLabel(this, 300, 27, 100, 40);
  editTextError.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  editTextError.setText("..");
  editTextError.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit
GTextField editTextAngle; 
GButton button1; 
GLabel txt_positionx; 
GLabel xValue; 
GLabel txtFanSpeed; 
GLabel speedValue; 
GLabel valueTargetX; 
GLabel txtTargetValueX; 
GSlider slider1; 
GTextField textfield1; 
GLabel editTextError; 